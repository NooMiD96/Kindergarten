// <auto-generated />
using System;
using Kindergarten.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kindergarten.Web.Migrations.Kindergarten
{
    [DbContext(typeof(KindergartenContext))]
    partial class KindergartenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview.19074.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.Fetcher", b =>
                {
                    b.Property<int>("FetcherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.HasKey("FetcherId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Fetchers");
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.FetcherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .IsRequired();

                    b.Property<int>("FetcherId");

                    b.HasKey("Id");

                    b.HasIndex("FetcherId");

                    b.ToTable("FetchersData");
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.Todo", b =>
                {
                    b.Property<int>("TodoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt");

                    b.Property<DateTime>("LastUpdateAt");

                    b.Property<int>("UserId");

                    b.HasKey("TodoId");

                    b.HasIndex("UserId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.TodoList", b =>
                {
                    b.Property<int>("TodoListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .IsRequired();

                    b.Property<string>("Payload")
                        .IsRequired();

                    b.Property<int>("TodoId");

                    b.HasKey("TodoListId");

                    b.HasIndex("TodoId")
                        .IsUnique();

                    b.ToTable("TodoLists");
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdentityUserId")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.Fetcher", b =>
                {
                    b.HasOne("Kindergarten.Database.Models.Kindergarten.User", "User")
                        .WithOne("Fetcher")
                        .HasForeignKey("Kindergarten.Database.Models.Kindergarten.Fetcher", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.FetcherData", b =>
                {
                    b.HasOne("Kindergarten.Database.Models.Kindergarten.Fetcher", "Fetcher")
                        .WithMany("FetcherDataList")
                        .HasForeignKey("FetcherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.Todo", b =>
                {
                    b.HasOne("Kindergarten.Database.Models.Kindergarten.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kindergarten.Database.Models.Kindergarten.TodoList", b =>
                {
                    b.HasOne("Kindergarten.Database.Models.Kindergarten.Todo", "Todo")
                        .WithOne("TodoList")
                        .HasForeignKey("Kindergarten.Database.Models.Kindergarten.TodoList", "TodoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
